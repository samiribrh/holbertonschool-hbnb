services:
  db:
    container_name: db
    image: postgres:latest
    env_file: ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "hbnb", "-d", "hbnb_v1"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    container_name: app
    build: ./backend
    env_file: ./backend/.env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    env_file: ./backend/.env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
  redis_data:

networks:
  mynetwork:
    driver: bridge